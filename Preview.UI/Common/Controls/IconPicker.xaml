<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:c="clr-namespace:Xylia.Preview.UI.Controls"
	xmlns:hc="https://handyorg.github.io/handycontrol">

	<Style TargetType="{x:Type c:IconPicker}" BasedOn="{StaticResource AutoCompleteTextBoxBaseStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="c:IconPicker">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<Border Name="border" Grid.ColumnSpan="2" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
						<TextBox Name="PART_SearchTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" CaretBrush="{TemplateBinding CaretBrush}" Padding="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" Text="{TemplateBinding Text}" IsReadOnly="{Binding IsReadOnly , RelativeSource={RelativeSource TemplatedParent}}" />
						<Button Name="PART_Button" Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" hc:IconElement.Width="14" Style="{StaticResource ButtonIcon}" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}" hc:IconElement.Geometry="{StaticResource DragHorizontalGeometry}" Grid.Column="1" Foreground="{Binding BorderBrush,ElementName=border}" Focusable="False" Grid.Row="0" />

						<Popup AllowsTransparency="true" Margin="1" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" IsOpen="{Binding IsDropDownOpen , Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
							<Border Name="dropDownBorder" BorderThickness="0,1,0,0" Effect="{StaticResource EffectShadow2}" Margin="8,0,8,8" MaxHeight="{TemplateBinding MaxDropDownHeight}" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource RegionBrush}" CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding ActualWidth , ElementName=dropDownBorder}">
								<hc:ToggleBlock VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" IsChecked="{Binding HasItems , RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
									<hc:ToggleBlock.CheckedContent>
										<ScrollViewer Margin="0,4">
											<ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
										</ScrollViewer>
									</hc:ToggleBlock.CheckedContent>
									<hc:ToggleBlock.UnCheckedContent>
										<hc:Empty />
									</hc:ToggleBlock.UnCheckedContent>
								</hc:ToggleBlock>
							</Border>
						</Popup>
						<Popup Name="PART_Popup" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=border}" StaysOpen="False" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Height" TargetName="dropDownBorder" Value="95" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true" SourceName="PART_SearchTextBox">
							<Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsFocused" Value="false" SourceName="PART_SearchTextBox" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryBorderBrush}" />
						</MultiTrigger>
						<Trigger Property="IsFocused" Value="True" SourceName="PART_SearchTextBox">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.4" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>